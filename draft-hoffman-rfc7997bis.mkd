---
title: The Use of Non-ASCII Characters in RFCs
abbrev: Non-ASCII in RFCs
docname: draft-hoffman-rfc7997bis-01

stand_alone: true
v: 3
obsoletes: 7997
updates: 7322

ipr: trust200902
kw: Internet-Draft
cat: info
consensus: true
submissionType: IETF

pi:
  toc: yes
  sortrefs: yes
  symrefs: yes

author:
 -
   ins: P. Hoffman
   name: Paul Hoffman
   org: ICANN
   email: paul.hoffman@icann.org

normative:
  BCP137:
  RFC7991:
  RFC7997:
  RFC9280:
  UnicodeCurrent:
    title: The Unicode Standard
    author:
    - org: The Unicode Consortium
    target: http://www.unicode.org/versions/latest/
    date: 2023

informative:
  RFC20:
  RFC7322:
  RFC7564:
  UnicodeNorm:
    title: Unicode Standard Annex #15: Unicode Normalization Form
    author:
    - org: The Unicode Consortium
    target: http://www.unicode.org/reports/tr15/
    date: 2023


--- abstract

The RFC Series has evolved to allow for the use of non-ASCII characters in RFCs.
While English remains the required language of the Series, the encoding of RFCs is now in UTF-8,
allowing for a broader range of characters than typically used in the English language. 
This document describes requirements and guidelines for the RFC Production Center
regarding the use of non-ASCII characters in RFCs.

This document updates RFC 7997 to reflect changes in the practices of the RFC series since RFC 7997 was published,
and makes further changes based on agreements in the IETF community about what characters are allowed in RFCs.

\[ A repository for this draft can be found [here](https://github.com/paulehoffman/7997bis). \]

--- middle

# Introduction

For much of the history of the RFC Series, the character encoding used for RFCs has been ASCII {{RFC20}}.
This was a sensible choice at the time: the language of the Series has always been English,
a language that primarily uses ASCII-encoded characters (ignoring for a moment words borrowed from more richly decorated alphabets);
and, ASCII is the "lowest common denominator" for character encoding, making cross-platform viewing trivial.

There are limits to ASCII, however, that hinder its continued use as the exclusive character encoding for the Series. 
At the time of the publication of {{RFC7997}},
the increasing need for easily readable, internationalized content suggested that it is time to allow non-ASCII characters in RFCs where necessary.
To support this move away from ASCII, RFCs switched to supporting UTF-8 as the default character encoding
and allowed support for a broad range of Unicode characters {{UnicodeCurrent}}. 

This document describes the rules under which non-ASCII characters may be used in an RFC.
These rules will be applied as the necessary changes are made to submission checking and editorial tools.

This document updates the RFC Style Guide {{RFC7322}}.

The details included in this document are expected to change based on experience gained in publishing new RFCs.

## Acknowledgements

RFC 7997 was written by Heather Flanagan, who was the RFC Series Editor (RSE) at the time of its publication.
Getting the IETF community to agree to the changes embodied in RFC 7997 was a difficult task,
and it is likely that this current document would be much more difficult to write had RFC 7997 not been worked out first.

The acknowledgements from RFC 7997 are
to the members of the IAB i18n program,
to the RFC Format Design Team:
Nevil Brownlee, Tony Hansen, Joe
Hildebrand, Paul Hoffman, Ted Lemon, Julian Reschke, Adam Roach,
Alice Russo, Robert Sparks, and Dave Thaler.

This current document was greatly helped by contributions from the RFC Series Working Group (RSWG), including from
Brian Carpenter,
Carsten Bormann,
Eliot Lear,
John Levine,
and
Martin Thomson.

## Changes from RFC 7997

The following is an overview of the changes in this document from RFC 7997:

- Added the role of the RFC stream approving bodies and the RFC Production Center (RPC)
as described in {{RFC9280}} throughout the document.
In short, all responsibilities that were held by the RFC Editor in RFC 7997 are handled by the RPC.
If the RPC has questions about the content of RFCs, the RPC can ask the RFC stream approving bodies for input.

- Removed requirements of marking non-ASCII characters with XML markup.
Clarified that names with non-Latin characters should have Latin transliterations.

- The basic requirements in {{basic_requirements}} were softened to reflect the realities of the variability
of search engines and web browsers.

- Changed {{uses}} from "Rules for the Use of Non-ASCII Characters" to "Use of Non-ASCII Characters"
because the RPC has used, and should continue to use,
their own discretion based on what makes the RFC most useful.

- Added the suggestion that non-ASCII characters appear in NFC.

- Language about the future was changed to the past tense to indicate that RFC 7997 was already implemented.
For example, "RFCs will switch" was changed to to "RFCs switched", and so on.
Also added more acknowledgement of the use of non-ASCII characters outside the narrow scope that was defined in RFC 7997.


# Basic Requirements {#basic_requirements}

The following fundamental requirements inform the guidance and examples provided in this document.  They are:

- Searches against RFC indexes and database tables should return expected results and support appropriate Unicode string matching behaviors.

- RFCs should be displayed correctly across a wide range of readers and browsers.
People whose systems do not have the fonts needed to display a particular RFC need to be able to read the various publication formats
and the XML correctly in order to understand and implement the information described in the document.

- As stated in the RFC Style Guide {{RFC7322}}, the language of the RFC Series is English.


# Use of Non-ASCII Characters {#uses}

This section describes the guidelines for the use of non-ASCII characters in an RFC.
If the RPC identifies areas where the use of non-ASCII characters in an RFC negatively impacts the readability of the text,
they can require that the authors supply alternate text or change the non-ASCII characters to better suit the expected readers of the RFC.

In general, using the "U+NNNN" syntax from {{BCP137}} is the suggested way to show Unicode code points as alternate text.

Characters in an RFC will generally appear in Normalization Form C (NFC), which is described in {{UnicodeNorm}}
as "canonical decomposition, followed by canonical composition".
If the author expects a different normalization form to appear in the published RFC, that must be noted in the text of the RFC.

## General Usage throughout a Document

Where the use of non-ASCII characters is purely part of an example and not otherwise required for correct protocol operation,
giving the Unicode equivalent of the non-ASCII characters is not required,
but it can improve the readability of the RFC.
For example, for text that says "The value can be followed by a monetary symbol such as ¥ or €",
the RPC might require that it instead say
"The value can be followed by a monetary symbol such as ¥ (U+00A5) or € (U+20AC)".

Reference entries (bibliographic text) and tables follow the rules given in this section.

\[ The text from {{body_of_document}} could be moved here and some duplication removed. \]

\[ The example for this section from RFC 7997 has been removed. It was, in fact, not an example of general
usage but instead a protocol example. \]

## Person and Company Names

\[ RFC 7997 was inconsistent in its rules and examples of when names with non-ASCII characters should be spelled out using all-ASCII transliteration. 
This section is significantly updated to clarify how names with non-ASCII characters should appear in RFCs. \]

Person names and company names appear in several places within an RFC (e.g., the header, Acknowledgements, and References).

When a script outside the ASCII character set is used for an individual name,
an author-provided, ASCII-only transliteration can appear immediately after the non-ASCII characters, surrounded by parentheses.
The RPC decides on a case-by-case basis whether to include the ASCII-only transliteration.

Names of authors appear at the top of RFCs and in the References section with a first initial (if available) and family name.
For example, Qin Wu's name might appear as "吴钦 (Q. Wu)".
As another example, Patrik Fältström's name might appear as "P. Fältström (P. Faltstrom)",
but the version with non-ASCII Latin characters also might be left just as "P. Fältström".

In the Acknowledgements section, the person's full name is spelled out in full without the first initial,
such as "The following people contributed to this document: 吴钦 (Qin Wu), ...".

It is important to note that non-ASCII characters in person and company names are treated differently than other parts of the body of a document.
Names are transliterated into Latin characters; non-ASCII characters in other body text are shown with U+ encoding after the character.

## Body of the Document {#body_of_document}

When the non-ASCII characters are required for correct protocol operation and understanding,
the characters' Unicode code points should also appear in the text in the "U+NNNN" syntax from {{BCP137}}, at least on first use in the RFC.

Use of the actual non-ASCII character (such as common math symbols like √ and ≤) is encouraged so that a reader can more easily see what the character is.
This is done without adding the "U+NNNN" syntax.

\[ Removed "The use of the Unicode character names like "INCREMENT" in addition to the use of Unicode code points is also encouraged."
This text was, in fact, wrong in 7997 because the character name did not match the example. \]

For example, {{RFC7564}} says:

~~~
However, the problem is made more serious by introducing the full
range of Unicode code points into protocol strings.  For example,
the characters U+13DA U+13A2 U+13B5 U+13AC U+13A2 U+13AC U+13D2 from
the Cherokee block look similar to the ASCII characters
"STPETER" as they might appear when presented using a "creative"
font family.
~~~

This could be replaced with:

~~~
However, the problem is made more serious by introducing the full
range of Unicode code points into protocol strings.  For example,
the characters "ᏚᎢᎵᎬᎢᎬᏒ" (U+13DA
U+13A2 U+13B5 U+13AC U+13A2 U+13AC U+13D2) from the Cherokee block
look similar to the ASCII characters "STPETER" as they might
appear when presented using a "creative" font family.
~~~

{{BCP137}} describes the pros and cons of different options for
identifying Unicode characters and may help authors decide how to
represent the non-ASCII characters in their documents.

Code components may have different requirements for using the U+ notation.
The use of the "U+NNNN" syntax in code components is recommended,
except within a code component where one must follow the rules of the programming language in which the code is being written.

## Keywords and Citation Tags

Keywords (as tagged with the &lt;keyword&gt; element in XML) and citation tags (as defined in the anchor attributes of &lt;reference&gt; elements)
must contain only ASCII characters.

\[ Does the WG still want this restriction? \]

## Authors' Address Information

The purpose of providing authors' address information, either postal or email,
is to assist readers of an RFC in contacting the author or authors.
Authors may include the official postal address as recognized by
their company or local postal service without additional Unicode character identification.

If an author's email address includes non-ASCII characters and is a valid email address at the time of publication,
it may be given without additional Unicode character identification.


# XML Markup

\[ This section needs revision after community discussion \]

As described above, use of non-ASCII characters in areas such as email, company name, address, and name is allowed.
In order to make it easier for code to identify the appropriate ASCII alternatives,
authors must include an "ascii" attribute to their XML markup when an ASCII alternative is required.
See {{RFC7991}} for more detail on how to tag ASCII alternatives.


# Internationalization Considerations

The ability to use non-ASCII characters in RFCs in a clear and consistent manner improves the ability to describe
internationalized protocols and recognizes the diversity of authors.
However, the goal of readability overrides the use of non-ASCII characters within the text.

# Security Considerations

Valid Unicode that matches the expected text must be verified in order to preserve expected behavior and protocol information.

--- back
